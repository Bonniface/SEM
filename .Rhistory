knitr::opts_chunk$set(echo = TRUE)
## load packages from CRAN
pacman::p_load(rio,          # File import
here,         # File locator
tidyverse,    # data management + ggplot2 graphics
tsibble,      # handle time series datasets
survey,       # for survey functions
srvyr,        # dplyr wrapper for survey package
gtsummary,    # wrapper for survey package to produce tables
apyramid,     # a package dedicated to creating age pyramids
patchwork,    # for combining ggplots
ggforce ,      # for alluvial/sankey plots
tinytex,
dplyr,
mice,
VIM,
DMwR2,
apyramid,
dplyr,
arsenal,
kableExtra,
ggplot2,
readxl,
DataExplorer
)
## load packages from github
pacman::p_load_gh(
"R4EPI/sitrep"          # for observation time / weighting functions
)
# Load the necessary libraries
USAGE <- read_excel("USAGE.xlsx")
library(readxl)
USAGE <- read_excel("USAGE.xlsx")
install.packages("vctrs")
remove.packages("vctrs")
install.packages("vctrs")
setwd("~/GitHub/SEM")
# knitr::opts_chunk$set(echo = TRUE)
#
# ## load packages from CRAN
# pacman::p_load(rio,          # File import
#                here,         # File locator
#                tidyverse,    # data management + ggplot2 graphics
#                tsibble,      # handle time series datasets
#                survey,       # for survey functions
#                srvyr,        # dplyr wrapper for survey package
#                gtsummary,    # wrapper for survey package to produce tables
#                apyramid,     # a package dedicated to creating age pyramids
#                patchwork,    # for combining ggplots
#                ggforce ,      # for alluvial/sankey plots
#                tinytex,
#                dplyr,
#                mice,
#                VIM,
#                DMwR2,
#                apyramid,
#                dplyr,
#                arsenal,
#                kableExtra,
#                ggplot2,
#                readxl,
#                DataExplorer
#                )
#
# ## load packages from github
# pacman::p_load_gh(
#      "R4EPI/sitrep"          # for observation time / weighting functions
# )
# # Load the necessary libraries
USAGE <- read_excel("USAGE.xlsx")
library(readxl)
USAGE <- read_excel("USAGE.xlsx")
library(readxl)
USAGE <- read.csv("USAGE.csv")
USAGE_xlsx = USAGE
colnames(USAGE_xlsx)
library(readxl)
USAGE <- read_excel("USAGE.xlsx")
USAGE_xlsx = USAGE
colnames(USAGE_xlsx)
introduce(USAGE)
install.packages("lavaan")
library(lavaan)
# install.packages("lavaan")
library(lavaan)
model <-
# Measurment
# Regression
# Residual Correlation
View(USAGE_xlsx)
source("functions.R")
# Call the function to abbreviate columns
USAGE <- abbreviate_df_columns(USAGE)
# Print the abbreviated column names
print(colnames(USAGE))
# Call the function to abbreviate columns
column_names <- abbreviate_columns(USAGE_xlsx)
# Print the data frame with previous and abbreviated column names
# View(column_names)
# colnames(USAGE)
skimr::skim(USAGE)
library(skimr)
skim(USAGE)
column_names <- c("Timestamp",
"Gender",
"Education",
"Employer",
"AgeRange",
"NHIS_Subscription_Duration",
"Previous_Healthcare_Access",
"Healthcare_Delivery_Perception",
"NHIS_Mobile_Renewal_Awareness",
"Previous_Mobile_Renewal_Use",
"Mobile_Renewal_Rating",
"Mobile_Renewal_Continuation_Opinion",
"Variable13",
"Mobile_Renewal_Speed_Efficiency",
"Mobile_Renewal_Time_Resource_Savings",
"Mobile_Renewal_Effectiveness",
"Mobile_Renewal_Productivity",
"Mobile_Renewal_Ease_of_Use",
"Mobile_Renewal_Ease_of_Learning",
"Mobile_Renewal_Mental_Effort",
"Mobile_Renewal_Clarity_Understanding",
"Mobile_Renewal_Intention_to_Use",
"Mobile_Renewal_Benefits_Awareness",
"Mobile_Renewal_Mobile_Money_Willingness",
"Mobile_Renewal_Perceived_Usefulness_Satisfaction",
"Mobile_Renewal_Quality_Perception",
"Mobile_Renewal_Cost_Perception",
"Mobile_Renewal_Service_Charges",
"Mobile_Renewal_Financial_Barriers",
"Mobile_Renewal_Accessibility",
"Mobile_Renewal_Disruptions_Problems")
library(readxl)
USAGE <- read_excel("USAGE.xlsx")
library(readxl)
USAGE <- read_excel("USAGE.xlsx")
colnames(USAGE) <- column_names
colnames(USAGE)
library(readxl)
USAGE <- read_excel("USAGE.xlsx")
# Assign the column names
colnames(USAGE) <- c(
"Timestamp",
"Gender",
"Education",
"Employment",
"AgeRange",
"NHIS_Subscription_Duration",
"Previous_Healthcare_Access",
"Healthcare_Delivery_Perception",
"NHIS_Mobile_Renewal_Awareness",
"Previous_Mobile_Renewal_Use",
"Mobile_Renewal_Rating",
"Mobile_Renewal_Continuation_Opinion",
"...13",
"Mobile_Renewal_Speed_Efficiency",
"Mobile_Renewal_Time_Resource_Savings",
"Mobile_Renewal_Effectiveness",
"Mobile_Renewal_Productivity",
"Mobile_Renewal_Ease_of_Use",
"Mobile_Renewal_Learning_Ease",
"Mobile_Renewal_Mental_Effort",
"Mobile_Renewal_Interactions_Clear",
"Mobile_Renewal_Intention_to_Use",
"Mobile_Renewal_Benefits_Awareness",
"Mobile_Renewal_Mobile_Money_Access",
"Mobile_Renewal_Service_Usefulness",
"Mobile_Renewal_Service_Quality",
"Mobile_Renewal_Service_Cost",
"Mobile_Renewal_Financial_Barriers",
"Mobile_Renewal_Service_Accessibility",
"Mobile_Renewal_Service_Disruptions"
)
colnames(USAGE) <- column_names
colnames(USAGE) <- column_names
colnames(USAGE)
colnames(USAGE)
View(UASGE)
View(USAGE)
library(readxl)
USAGE <- read_excel("USAGE.xlsx")
colnames(USAGE)
# Assign the column names
colnames(USAGE) <- c(
"Timestamp",
"Gender",
"Education",
"Employment",
"AgeRange",
"NHIS_Subscription_Duration",
"Previous_Healthcare_Access",
"Healthcare_Delivery_Perception",
"NHIS_Mobile_Renewal_Awareness",
"Previous_Mobile_Renewal_Use",
"Mobile_Renewal_Rating",
"Mobile_Renewal_Continuation_Opinion",
"...13",
"Mobile_Renewal_Speed_Efficiency",
"Mobile_Renewal_Time_Resource_Savings",
"Mobile_Renewal_Effectiveness",
"Mobile_Renewal_Productivity",
"Mobile_Renewal_Ease_of_Use",
"Mobile_Renewal_Learning_Ease",
"Mobile_Renewal_Mental_Effort",
"Mobile_Renewal_Interactions_Clear",
"Mobile_Renewal_Intention_to_Use",
"Mobile_Renewal_Benefits_Awareness",
"Mobile_Renewal_Mobile_Money_Access",
"Mobile_Renewal_Service_Usefulness",
"Mobile_Renewal_Service_Quality",
"Mobile_Renewal_Service_Cost",
"Mobile_Renewal_Financial_Barriers",
"Mobile_Renewal_Service_Accessibility",
"Mobile_Renewal_Service_Disruptions",
"Mobile_Renewal_Service_Availability",
"Mobile_Renewal_Service_Reliability",
"Mobile_Renewal_Service_Authenticity",
"Mobile_Renewal_Service_Data_Security",
"Mobile_Renewal_Service_Satisfaction"
)
colnames(USAGE) <- column_names
colnames(USAGE)
library(readxl)
USAGE <- read_excel("USAGE.xlsx")
colnames(USAGE)
# Assign the column names
colnames(USAGE) <- c(
"Timestamp",
"Gender",
"Education",
"Employment",
"AgeRange",
"NHIS_Subscription_Duration",
"Previous_Healthcare_Access",
"Healthcare_Delivery_Perception",
"NHIS_Mobile_Renewal_Awareness",
"Previous_Mobile_Renewal_Use",
"Mobile_Renewal_Rating",
"Mobile_Renewal_Continuation_Opinion",
"...13",
"Mobile_Renewal_Speed_Efficiency",
"Mobile_Renewal_Time_Resource_Savings",
"Mobile_Renewal_Effectiveness",
"Mobile_Renewal_Productivity",
"Mobile_Renewal_Ease_of_Use",
"Mobile_Renewal_Learning_Ease",
"Mobile_Renewal_Mental_Effort",
"Mobile_Renewal_Interactions_Clear",
"Mobile_Renewal_Intention_to_Use",
"Mobile_Renewal_Benefits_Awareness",
"Mobile_Renewal_Mobile_Money_Access",
"Mobile_Renewal_Service_Usefulness",
"Mobile_Renewal_Service_Quality",
"Mobile_Renewal_Service_Cost",
"Mobile_Renewal_Financial_Barriers",
"Mobile_Renewal_Service_Accessibility",
"Mobile_Renewal_Service_Disruptions",
"Mobile_Renewal_Service_Availability",
"Mobile_Renewal_Service_Reliability",
"Mobile_Renewal_Service_Authenticity",
"Mobile_Renewal_Service_Data_Security",
"Mobile_Renewal_Service_Satisfaction"
)
colnames(USAGE) <- column_names
# Assign the column names
colnames(USAGE) <- c(
"Timestamp",
"Gender",
"Education",
"Employment",
"AgeRange",
"NHIS_Subscription_Duration",
"Previous_Healthcare_Access",
"Healthcare_Delivery_Perception",
"NHIS_Mobile_Renewal_Awareness",
"Previous_Mobile_Renewal_Use",
"Mobile_Renewal_Rating",
"Mobile_Renewal_Continuation_Opinion",
"...13",
"Mobile_Renewal_Speed_Efficiency",
"Mobile_Renewal_Time_Resource_Savings",
"Mobile_Renewal_Effectiveness",
"Mobile_Renewal_Productivity",
"Mobile_Renewal_Ease_of_Use",
"Mobile_Renewal_Learning_Ease",
"Mobile_Renewal_Mental_Effort",
"Mobile_Renewal_Interactions_Clear",
"Mobile_Renewal_Intention_to_Use",
"Mobile_Renewal_Benefits_Awareness",
"Mobile_Renewal_Mobile_Money_Access",
"Mobile_Renewal_Service_Usefulness",
"Mobile_Renewal_Service_Quality",
"Mobile_Renewal_Service_Cost",
"Mobile_Renewal_Financial_Barriers",
"Mobile_Renewal_Service_Accessibility",
"Mobile_Renewal_Service_Disruptions",
"Mobile_Renewal_Service_Availability",
"Mobile_Renewal_Service_Reliability",
"Mobile_Renewal_Service_Authenticity",
"Mobile_Renewal_Service_Data_Security",
"Mobile_Renewal_Service_Satisfaction"
)
print(colnames(USAGE))
library(readxl)
USAGE <- read_excel("USAGE.xlsx")
colnames(USAGE)
# Assign the column names
colnames(USAGE) <- c(
"Timestamp",
"Gender",
"Education",
"Employment",
"AgeRange",
"NHIS_Subscription_Duration",
"Previous_Healthcare_Access",
"Healthcare_Delivery_Perception",
"NHIS_Mobile_Renewal_Awareness",
"Previous_Mobile_Renewal_Use",
"Mobile_Renewal_Rating",
"Mobile_Renewal_Continuation_Opinion",
"...13",
"Mobile_Renewal_Speed_Efficiency",
"Mobile_Renewal_Time_Resource_Savings",
"Mobile_Renewal_Effectiveness",
"Mobile_Renewal_Productivity",
"Mobile_Renewal_Ease_of_Use",
"Mobile_Renewal_Learning_Ease",
"Mobile_Renewal_Mental_Effort",
"Mobile_Renewal_Interactions_Clear",
"Mobile_Renewal_Intention_to_Use",
"Mobile_Renewal_Benefits_Awareness",
"Mobile_Renewal_Mobile_Money_Access",
"Mobile_Renewal_Service_Usefulness",
"Mobile_Renewal_Service_Quality",
"Mobile_Renewal_Service_Cost",
"The_service_charge_for_Mobile_Renewal",
"Mobile_Renewal_Financial_Barriers",
"Mobile_Renewal_Service_Accessibility",
"Mobile_Renewal_Service_Disruptions",
"Mobile_Renewal_Service_Availability",
"Mobile_Renewal_Service_Reliability",
"Mobile_Renewal_Service_Authenticity",
"Trust_Telecom_Operators",
"Mobile_Renewal_Service_Data_Security",
"Mobile_Renewal_Service_Satisfaction"
)
colnames(USAGE)
library(DataExplorer)
# Calculate the missing value percentages for each column
missing_percentages <- colSums(is.na(USAGE)) / nrow(USAGE) * 100
# Identify columns with missing value percentages above 50%
columns_to_drop <- names(missing_percentages[missing_percentages > 50])
# Drop the columns from the data frame
USAGE <- USAGE[, !(names(USAGE) %in% columns_to_drop)]
# Create a data frame with the column names and their corresponding missing value percentages
missing_data <- data.frame(
Column = colnames(USAGE),
Missing_Percentage = colSums(is.na(USAGE)) / nrow(USAGE) * 100
)
# Plot the missing value percentages
ggplot(missing_data, aes(x = reorder(Column, -Missing_Percentage), y = Missing_Percentage)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Column", y = "Missing Percentage") +
ggtitle("Missing Value Percentage in Each Column") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(ggplot2)
# Create a data frame with the column names and their corresponding missing value percentages
missing_data <- data.frame(
Column = colnames(USAGE),
Missing_Percentage = colSums(is.na(USAGE)) / nrow(USAGE) * 100
)
# Plot the missing value percentages
ggplot(missing_data, aes(x = reorder(Column, -Missing_Percentage), y = Missing_Percentage)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Column", y = "Missing Percentage") +
ggtitle("Missing Value Percentage in Each Column") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
filled_data <- fillMissingValues(USAGE)
source(functions.R)
abbreviate_df_columns <- function(data) {
# Iterate over each column
for (col in 1:ncol(data)) {
# Get the column name
col_name <- colnames(data)[col]
# Split the column name into words
words <- strsplit(col_name, " ")[[1]]
# Extract the first letter of each word and combine them
abbreviation <- paste0(substr(words, 1, 1), collapse = "")
# Rename the column with the abbreviation
colnames(data)[col] <- abbreviation
}
return(data)
}
abbreviate_columns <- function(data) {
# Create a data frame to store the column names
column_names <- data.frame(
Previous_Name = colnames(data),
Abbreviation = character(ncol(data)),
stringsAsFactors = FALSE
)
# Iterate over each column
for (col in 1:ncol(data)) {
# Get the column name
col_name <- colnames(data)[col]
# Split the column name into words
words <- strsplit(col_name, " ")[[1]]
# Extract the first letter of each word and combine them
abbreviation <- paste0(substr(words, 1, 1), collapse = "")
# Store the abbreviation in the data frame
column_names$Abbreviation[col] <- abbreviation
# Rename the column with the abbreviation
colnames(data)[col] <- abbreviation
}
return(column_names)
}
fillMissingValues <- function(data) {
for (col in names(data)) {
if (is.numeric(data[[col]])) {
# For numerical variables, fill missing values with the mean
data[[col]][is.na(data[[col]])] <- mean(data[[col]], na.rm = TRUE)
} else {
# For character variables, fill missing values with the most frequent value
mode_value <- names(table(data[[col]]))[which.max(table(data[[col]]))]
data[[col]][is.na(data[[col]])] <- mode_value
}
}
return(data)
}
source(functions.R)
source('functions.R')
filled_data <- fillMissingValues(USAGE)
Data <- filled_data%>%
mutate_if(is.numeric, round)
library(tidyverse)
install.packages("cli")
